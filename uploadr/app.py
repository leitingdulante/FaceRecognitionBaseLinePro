
from flask import Flask, request, redirect, url_for, render_template
import json
import glob
from uuid import uuid4
from .faceFind.face_predict import FacePredict

from .util import *

app = Flask(__name__)

# init work
facePredictor = FacePredict()
initStatus = facePredictor.init()
if initStatus:
    # wamup 一下,要不然tf.sess.run太慢
    facePredictor.predict(facePredictor.base64Img2cvImg(""), threshold=-0.7)
    print("server init success ! -----------------------")

@app.route("/")
def index():
    return render_template("index.html")

# 声音录入页面
@app.route("/voice")
def voice():
    return render_template("voice.html")

# 人脸录入页面
@app.route("/faceUpload")
def faceUpload():
    return render_template("face.html", type="upload")

# 人脸识别页面
@app.route("/face")
def face():
    return render_template("face.html", type="find")

# 人脸识别接口
@app.route("/faceFind", methods=["POST"])
def faceFind():
    img = getImg(request.form)
    simKey, simValue, idxs = facePredictor.predict(facePredictor.base64Img2cvImg(img), threshold=-0.7)
    print(simKey, simValue)
    if simKey is None:
        return ajax_response(False, {"idxs": idxs, "result": []})
    return ajax_response(True, {"idxs": idxs, "result": simKey.split("_") + ["huan", "ying", "ni"]})

# 人脸录入接口
@app.route("/faceRecord", methods=["POST"])
def faceRecord():
    form = request.form
    img = getImg(form)
    status, idxs = facePredictor.recordFace(form.get("name", None), facePredictor.base64Img2cvImg(img))
    return ajax_response(status, idxs)

# 人脸录入结束
@app.route("/faceRecorEnd", methods=["POST"])
def faceRecorEnd():
    facePredictor.saveCache()
    return ajax_response(True)

# 人脸识别框
@app.route("/getFaceRect", methods=["POST"])
def getFaceRect():
    status, idxs = facePredictor.getFaceRectangle(facePredictor.base64Img2cvImg(getImg(request.form)))
    return ajax_response(status, idxs)

# 声音录入接口
@app.route("/voiceRecord", methods=["POST"])
def voiceRecord():
    names = request.form.get("names")
    namesArray = names.split("_")
    if len(namesArray) == 1:
        destination = "uploadr/static/voice/" + names + ".mp3"
        request.files.getlist("file")[0].save(destination)
    else:
        destination = "uploadr/resource/voice/" + names + ".mp3"
        request.files.getlist("file")[0].save(destination)
        splitMp3(namesArray, destination)
    return ajax_response(True)

@app.route("/upload", methods=["POST"])
def upload():
    """Handle the upload of a file."""
    form = request.form

    # Is the upload using Ajax, or a direct POST by the form?
    is_ajax = False
    if form.get("__ajax", None) == "true":
        is_ajax = True

    # Target folder for these uploads.
    filename = form.get("name", None)
    if filename is None:
        return ajax_response(False)

    if filename.find("mp3") != -1:
        destination = "uploadr/static/voice/" + filename
        for upload in request.files.getlist("file"):
            upload.save(destination)
    else:
        storeImg(filename, getImg(form))

    if is_ajax:
        return ajax_response(True)
    else:
        # Create a unique "session ID" for this particular batch of uploads.
        upload_key = str(uuid4())
        return redirect(url_for("upload_complete", uuid=upload_key))


@app.route("/files/<uuid>")
def upload_complete(uuid):
    """The location we send them to at the end of the upload."""

    # Get their files.
    root = "uploadr/static/uploads/{}".format(uuid)
    if not os.path.isdir(root):
        return "Error: UUID not found!"

    files = []
    for file in glob.glob("{}/*.*".format(root)):
        fname = file.split(os.sep)[-1]
        files.append(fname)

    return render_template("files.html",
        uuid=uuid,
        files=files,
    )


def ajax_response(status, msg=""):
    status_code = "ok" if status else "error"
    return json.dumps(dict(
        status=status_code,
        msg=msg,
    ))
